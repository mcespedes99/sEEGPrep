#---- begin snakebids boilerplate ----------------------------------------------

import snakebids
from snakebids import bids
from os.path import join

configfile: workflow.source_path('../config/snakebids.yml')

# Get input wildcards
inputs = snakebids.generate_inputs(
    bids_dir=config["bids_dir"],
    pybids_inputs=config["pybids_inputs"],
    pybids_database_dir=config.get("pybids_db_dir"),
    pybids_reset_database=config.get("pybids_db_reset"),
    derivatives=config.get("derivatives", None),
    participant_label=config.get("participant_label", None),
    exclude_participant_label=config.get("exclude_participant_label", None),
    use_bids_inputs=True,
)



#this adds constraints to the bids naming
wildcard_constraints:  **snakebids.get_wildcard_constraints(config['pybids_inputs'])

#---- end snakebids boilerplate ------------------------------------------------
rule all:
    input:
        clean_edf = expand(
                        bids(
                            root='bids',
                            datatype='ieeg',
                            suffix='clean.edf',
                            **inputs.wildcards['ieeg']
                        ),
                        zip,
                        **inputs.zip_lists['ieeg']
                    ),
        electrodes_tsv = expand(
                                bids(
                                    root='bids',
                                    datatype='ieeg',
                                    suffix='regions_native_space.tsv',
                                    **inputs.wildcards['ieeg']
                                ),
                                zip,
                                **inputs.zip_lists['ieeg']
                            ),

## Downsampling
include: "rules/downsample.smk"

## Cleaning
include: "rules/filter.smk"

## Rereferencing
include: "rules/rereference.smk"

## Region identification
include: "rules/identify_regions.smk"
